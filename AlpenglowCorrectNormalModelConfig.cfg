SPECIFICATION Spec

CONSTANTS
    Nodes = {n1, n2, n3, n4}
    MaxSlots = 4
    WindowSize = 2
    Gamma = 2
    TotalShreds = 4
    BlockTime = 1
    NetworkDelay = 7
    GenesisSlot = 1
    ByzantineNodes = {}
    CorrectBlocks = {b1, b2, b3}
    MaliciousBlocks = {m2}
    RotorRelayNodes = {n2, n3, n4}
    MaxTime = 15

INVARIANTS
    Safety
    Theorem1_Safety
    CertificateUniqueness
    TypeOK
    NonEquivocation
    ChainConsistency
    ByzantineResilienceProperty
    NoMaliciousFinalization
    ByzantineResilience
    NoDoubleVoting


SYMMETRY
    NodeSymmetry

CHECK_DEADLOCK FALSE

\* Model checking configuration:
\* - Tests normal operation with all correct nodes
\* - Validates both fast path (80%) and slow path (60%) finalization
\* - Verifies liveness and progress properties
\*
\* Note on RotorSafety:
\* RotorSafety is disabled because it contains timing-sensitive sub-properties
\* that are too strict for TLC verification. Specifically:
\* - RotorReconstructionPossible checks if nodes with â‰¥Gamma shreds can reconstruct
\* - However, this check happens at EVERY state, including intermediate states
\*   where shreds are being generated but not yet fully distributed
\* 
\* The safety of Rotor is verified through:
\* 1. Individual Rotor invariants (RotorRelaysSelected, RotorShredsValid, etc.)
\* 2. Block dissemination observed in execution traces
\* 3. Successful voting and finalization (proves blocks were received)
\*
\* For production verification, you can:
\* - Enable individual Rotor sub-properties separately
\* - Use -simulate mode for trace-based verification
\* - Check manually that blocks are disseminated in logs